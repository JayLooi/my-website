import React from 'react';
import './Projects.css';

class Struct extends Function {
    constructor (...keys) {
        super('...args', 'return this._call(...args)');
        this._this = this.bind(this);
        this._keys = keys;
        this._keys.forEach((k) => {
            if ((typeof(k) != "string") && (typeof(k) != "number")) {
                throw new Error("Error: Invalid key. \nkey of Struct member should be string or number.");
            }
        })
        return this._this;
    }

    _call = (...args) => {
        var struct = {};
        this._keys.forEach((k, i) => {
            struct[k] = args[i];
        });

        return struct;
    }
}

const projectsStruct = new Struct('title', 'brief', 'details');
const projectsList = [
    projectsStruct(
        'Code Change Impact Analysis', 
        'Internship Project: Scrape code change information for impact analysis', 
        [
            'Built with Python language. ', 
            'Consumed Jira API to fetch information of tickets. ', 
            'Developed Python script to perform `git diff` command to find code changes. ',
            'Developed Python script to parse XML files generated by Doxygen. ',
            'Utilised Python Django Framework to work with PostgreSQL database. ',  
            'Integrated all the functions into a GUI by using Python Tkinter library. '
        ]),
    projectsStruct(
        'Document Translation', 
        'UTM AIROST Team Project: A project to translate datasheet/user manual from Chinese to English', 
        [
            'Developed algorithm to detect horizontal and vertical lines in documents by using OpenCV. ', 
            'Developed GUI by using Python Tkinter library. '
        ]
    ),
];

class Projects extends React.Component {
   constructor (props) {
       super(props);
       this.state = {};
   }

   renderProjectContainer = (project, index) => {
       return (
           <div key={index}>
               <div>
                   {project.title}
               </div>

               <div>
                   {project.brief}
               </div>

               <ul>
                   {project.details.map((detail, detailIndex) => <li key={detailIndex}> {detail} </li>)}
               </ul>
           </div>
       );
   }

   render () {
       return (
           <div>
               {
                   projectsList.map(this.renderProjectContainer)
               }
           </div>
       );
   }
};

export default Projects;
